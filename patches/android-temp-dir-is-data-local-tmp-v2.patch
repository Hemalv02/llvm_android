From 17305ceb4f074a8e10687ced8175f0065d447ee1 Mon Sep 17 00:00:00 2001
From: Ryan Prichard <rprichard@google.com>
Date: Thu, 28 Apr 2022 16:25:16 -0700
Subject: [PATCH] [libc++] Android temp dir is /data/local/tmp, enable Windows
 test

On Android, the temporary directory is /data/local/tmp, not /tmp.

On Windows, temp_directory_path falls back to the Windows directory
(e.g. "C:\Windows"), so call GetWindowsDirectoryW to do the test.

Differential Revision: https://reviews.llvm.org/D137131
---
 libcxx/src/filesystem/operations.cpp                   |  7 ++++++-
 .../fs.op.temp_dir_path/temp_directory_path.pass.cpp   | 10 +++++++++-
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/libcxx/src/filesystem/operations.cpp b/libcxx/src/filesystem/operations.cpp
index fc14778f3f7a..af31fe049b3e 100644
--- a/libcxx/src/filesystem/operations.cpp
+++ b/libcxx/src/filesystem/operations.cpp
@@ -1550,8 +1550,13 @@ path __temp_directory_path(error_code* ec) {
   for (auto& ep : env_paths)
     if ((ret = getenv(ep)))
       break;
-  if (ret == nullptr)
+  if (ret == nullptr) {
+#if defined(__ANDROID__)
+    ret = "/data/local/tmp";
+#else
     ret = "/tmp";
+#endif
+  }
 
   path p(ret);
 #endif
diff --git a/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.temp_dir_path/temp_directory_path.pass.cpp b/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.temp_dir_path/temp_directory_path.pass.cpp
index 0b5018dea164..0a19662e9a28 100644
--- a/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.temp_dir_path/temp_directory_path.pass.cpp
+++ b/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.temp_dir_path/temp_directory_path.pass.cpp
@@ -136,8 +136,16 @@ TEST_CASE(basic_tests)
         std::error_code ec = GetTestEC();
         path ret = temp_directory_path(ec);
         assert(!ec);
-#ifndef _WIN32
+#if defined(_WIN32)
         // On Windows, the function falls back to the Windows folder.
+        wchar_t win_dir[MAX_PATH];
+        DWORD win_dir_sz = GetWindowsDirectoryW(win_dir, MAX_PATH);
+        assert(win_dir_sz > 0 && win_dir_sz < MAX_PATH);
+        assert(win_dir[win_dir_sz-1] != L'\\');
+        assert(ret == win_dir);
+#elif defined(__ANDROID__)
+        assert(ret == "/data/local/tmp");
+#else
         assert(ret == "/tmp");
 #endif
         assert(is_directory(ret));
-- 
2.39.0.314.g84b9a713c41-goog

