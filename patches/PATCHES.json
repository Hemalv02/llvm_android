[
    {
        "comment": "[UPSTREAM] Revert \"[SLP]Merge reorder and reuse shuffles.\"",
        "rel_patch_path": "cherry/e463bd53c03ff9183bd30030477dfe6f3b2fdd0c.patch",
        "start_version": 416183,
        "end_version": 416430
    },
    {
        "comment": "[UPSTREAM] Revert \"[clang] Change builtin object size when subobject is invalid\"",
        "rel_patch_path": "cherry/b270fd59f0a86fe737853abc43e76b9d29a67eea.patch",
        "start_version": 416183,
        "end_version": 416525
    },
    {
        "comment": "[UPSTREAM] [ARM] Add new and regenerate SSAT tests. NFC",
        "rel_patch_path": "cherry/476de8cea3530cb9bf9339502f77cdd18d5f98b6.patch",
        "start_version": 407598,
        "end_version": 416713
    },
    {
        "comment": "[UPSTREAM] Revert \"[clang] Suppress \"follow-up\" diagnostics on recovery call expressions.\"",
        "rel_patch_path": "cherry/d972d4c749048531953a16b815e07c67e8455a3b.patch",
        "start_version": 412851,
        "end_version": 416719
    },
    {
        "comment": "[UPSTREAM] [ARM] Disable sign extended SSAT pattern recognition.",
        "rel_patch_path": "cherry/af0332498405b3a4074cef09845bbacfd4fd594f.patch",
        "start_version": 407598,
        "end_version": 416728
    },
    {
        "comment": "[UPSTREAM] [GVN] do not repeat PRE on failure to split critical edge",
        "rel_patch_path": "cherry/d36812892c16b551f058774babbc8727737f80cd.patch",
        "start_version": 412851,
        "end_version": 417022
    },
    {
        "comment": "[UPSTREAM] [ARM][RegisterScavenging] Don't consider LR liveout if it is not reloaded",
        "rel_patch_path": "cherry/b9ed8ebe0e2ffa803b0bda60f9bbc9bb26f95000.patch",
        "start_version": 412851,
        "end_version": 417334
    },
    {
        "comment": "[UPSTREAM] Disable CFI in __get_elem to allow casting a pointer to uninitialized memory",
        "rel_patch_path": "cherry/bab74864168bb5e28ecbc0294fe1095d8da7f569.patch",
        "start_version": 416183,
        "end_version": 417837
    },
    {
        "comment": "[UPSTREAM] Revert \"[ConstantFold] Fold more operations to poison\"",
        "rel_patch_path": "cherry/06829034ca64b8c83a5b20d8abe5ddbfe7af0004.patch",
        "start_version": 416183,
        "end_version": 417900
    },
    {
        "comment": "[UPSTREAM] [Coverage] Propogate counter to condition of conditional operator",
        "rel_patch_path": "cherry/4dc08cc3aa41a28ca6ec82bb9c7183048761aad5.patch",
        "start_version": 416183,
        "end_version": 417944
    },
    {
        "comment": "[UPSTREAM] [clang][Arm] Fix handling of -Wa,-march=",
        "rel_patch_path": "cherry/1d51c699b9e2ebc5bcfdbe85c74cc871426333d4.patch",
        "start_version": 412851,
        "end_version": 418022
    },
    {
        "comment": "[UPSTREAM] Revert \"Revert \"[clang][driver] Only warn once about invalid library values\"\"",
        "rel_patch_path": "cherry/b86a763afb9a1f55f4b234ce97320917ead6ac7f.patch",
        "start_version": 416183,
        "end_version": 418524
    },
    {
        "comment": "[UPSTREAM] [Thumb2] support `movs pc, lr` alias for `subs pc, lr, #0`/`eret`",
        "rel_patch_path": "cherry/68945a8686708c6e4c74b9aeb231b8c4e1731181.patch",
        "start_version": 412851,
        "end_version": 418542
    },
    {
        "comment": "[UPSTREAM] [clang][Arm] Fix handling of -Wa,-implicit-it=",
        "rel_patch_path": "cherry/a680bc3a31d36d321ccf3801bdcff74d58842bfa.patch",
        "start_version": 412851,
        "end_version": 418680
    },
    {
        "comment": "[UPSTREAM] ObjectFileELF: Test whether reloc_header is non-null instead of asserting.",
        "rel_patch_path": "cherry/c314f5ede8249ef20fff1de45c2c31156b1950d4.patch",
        "start_version": 416183,
        "end_version": 418715
    },
    {
        "comment": "[UPSTREAM] libunwind: Don't attempt to authenticate a null return address.",
        "rel_patch_path": "cherry/cddc53ef088b68586094c9841a76b41bee3994a4.patch",
        "start_version": 412851,
        "end_version": 419080
    },
    {
        "comment": "[UPSTREAM] [Coverage] Emit gap region after conditions when macro is present.",
        "rel_patch_path": "cherry/d83511dd26ca8d0dd5be6302ad7b55de05cedab2.patch",
        "start_version": 416183,
        "end_version": 419342
    },
    {
        "comment": "[UPSTREAM] [libunwind] unw_* alias fixes for ELF and Mach-O",
        "rel_patch_path": "cherry/729899f7b6bf6aff65988d895d7a639391a67608.patch",
        "start_version": 416183,
        "end_version": 419703
    },
    {
        "comment": "[UPSTREAM] [THUMB2] add .w suffixes for ldr/str (immediate) T4",
        "rel_patch_path": "cherry/1e204ac78952cf7e4fcf335423e80007388d3979.patch",
        "start_version": 412851,
        "end_version": 419786
    },
    {
        "comment": "[UPSTREAM] [MC][ARM] add .w suffixes for BL (T1) and DBG",
        "rel_patch_path": "cherry/404843a94dbf2f9d91b9bb1dfc8608a4d7ae58c7.patch",
        "start_version": 412851,
        "end_version": 419919
    },
    {
        "comment": "[UPSTREAM] [MC][ARM] make Thumb function also if type attribute is set",
        "rel_patch_path": "cherry/a921aaf789912d981cbb2036bdc91ad7289e1523.patch",
        "start_version": 412851,
        "end_version": 419946
    },
    {
        "comment": "[UPSTREAM] [Android] Use -l:libunwind.a with --rtlib=compiler-rt",
        "rel_patch_path": "cherry/91f8aacc040f5a458cfc2a10c4039e0028931455.patch",
        "start_version": 416183,
        "end_version": 420059
    },
    {
        "comment": "[UPSTREAM] Reland \"[builtins] Define fmax and scalbn inline\"",
        "rel_patch_path": "cherry/d202201410222766b5ffd2b032473fbb4a1b5bf8.patch",
        "start_version": 416183,
        "end_version": 420163
    },
    {
        "comment": "[UPSTREAM] Revert \"[c++20] Mark class type NTTPs as done and start defining the feature test macro.\"",
        "rel_patch_path": "cherry/564f5b0734bd5d265a0046e5ca9d08ae5bc303eb.patch",
        "start_version": 416183,
        "end_version": 420338
    },
    {
        "comment": "[UPSTREAM] [ARM] support symbolic expressions as branch target in b.w",
        "rel_patch_path": "cherry/c35105055ee4565ee6726d5b155538dd5c0307d3.patch",
        "start_version": 412851,
        "end_version": 420366
    },
    {
        "comment": "[UPSTREAM] [objdump][ARM] Use correct offset when printing ARM/Thumb branch targets",
        "rel_patch_path": "cherry/aac056c528cf139e6881211ee7fe6743c79a68d4.patch",
        "start_version": 412851,
        "end_version": 420650
    },
    {
        "comment": "[UPSTREAM] Revert \"Revert \"[Coverage] Emit gap region between statements if first statements contains terminate statements.\"\"",
        "rel_patch_path": "cherry/9783e2098800b954c55ae598a1ce5c4b93444fc0.patch",
        "start_version": 416183,
        "end_version": 420717
    },
    {
        "comment": "[UPSTREAM] [Android] Default to --rtlib=compiler-rt",
        "rel_patch_path": "cherry/a478b0a199f4928041390d1f35dd5e226936b42c.patch",
        "start_version": 416183,
        "end_version": 421228
    },
    {
        "comment": "[UPSTREAM] [AArch64][compiler-rt] Add Pointer Authentication support for VFORK.",
        "rel_patch_path": "cherry/201550852be4d4213d733316c38c0a7335b0d14c.patch",
        "start_version": 412851,
        "end_version": 421291
    },
    {
        "comment": "[UPSTREAM] [AArch64][compiler-rt] Strip PAC from the link register.",
        "rel_patch_path": "cherry/ad40453fc425ee8e1fe43c7bb6e3c1c3afa9cc3b.patch",
        "start_version": 412851,
        "end_version": 421672
    },
    {
        "comment": "[UPSTREAM] [compiler-rt][aarch64] Add PAC-RET/BTI support to HWASAN.",
        "rel_patch_path": "cherry/a46effbd2aec88012c8f94b81da51dfd5b9e141b.patch",
        "start_version": 416183,
        "end_version": 424185
    },
    {
        "comment": "[UPSTREAM] [SantizerCoverage] handle missing DBG MD when inserting libcalls",
        "rel_patch_path": "cherry/4914c9836765532ffaec9c85bc57690dbdaeb50f.patch",
        "start_version": 416183,
        "end_version": 424245
    },
    {
        "comment": "[UPSTREAM] [compiler-rt][aarch64] Add PAC-RET/BTI property to hwasan_interceptors_vfork.S",
        "rel_patch_path": "cherry/5d214238a15ca28cca99f1a5db6ff8c4c5866711.patch",
        "start_version": 416183,
        "end_version": 424247
    },
    {
        "comment": "[UPSTREAM] [AArch64][v8.5A] Add BTI to all function starts",
        "rel_patch_path": "cherry/cca40aa8d8aa732a226c8978e53cd47e7b7c76ec.patch",
        "start_version": 416183,
        "end_version": 424446
    },
    {
        "comment": "[UPSTREAM] [hwasan] Fix lock contention on thread creation.",
        "rel_patch_path": "cherry/51aa61e74bdb394d89217350ddcb0fd04a21e32f.patch",
        "start_version": 416183,
        "end_version": 424523
    },
    {
        "comment": "[UPSTREAM] [llvm-objcopy][ELF] --only-keep-debug: set offset/size of segments with no sections to zero",
        "rel_patch_path": "cherry/b3336bfa2e6a38f16c4ecf4d77bd0f97ec5a46eb.patch",
        "start_version": 422132,
        "end_version": 426523
    },
    {
        "comment": "[UPSTREAM] [hwasan] Fix missing synchronization in AllocThread.",
        "rel_patch_path": "cherry/18959a6a094c6469fc2fd5cc167fda7cbe3f163b.patch",
        "start_version": 416183,
        "end_version": 426529
    },
    {
        "comment": "[UPSTREAM] Revert \"[NFCI][LoopDeletion] Do not call complex analysis for known non-zero BTC\"",
        "rel_patch_path": "cherry/dd226803c220f02a5987f0ee9f9ac3ffe2b35c09.patch",
        "start_version": 428724,
        "end_version": 428728
    },
    {
        "comment": "[UPSTREAM] Revert \"[NFC] Reuse existing variables instead of re-requesting successors\"",
        "rel_patch_path": "cherry/807fc7cdc97fc172b4967707a7718e7333351bff.patch",
        "start_version": 428724,
        "end_version": 428729
    },
    {
        "comment": "[UPSTREAM] Revert \"[NFC] Formatting fix\"",
        "rel_patch_path": "cherry/fd553312031c7d8085fa6ee0755a957796eadf05.patch",
        "start_version": 428724,
        "end_version": 428730
    },
    {
        "comment": "[UPSTREAM] Revert \"[NFCI][LoopDeletion] Only query SCEV about loop successor if another successor is also in loop\"",
        "rel_patch_path": "cherry/24bd657202379595b514ee17241f019294e86bc9.patch",
        "start_version": 428724,
        "end_version": 428731
    },
    {
        "comment": "[UPSTREAM] Revert \"Return \"[LoopDeletion] Break backedge if we can prove that the loop is exited on 1st iteration\" (try 2)\"",
        "rel_patch_path": "cherry/0159652058ca555b05db6a209fe9cf660c3bf8e6.patch",
        "start_version": 428724,
        "end_version": 428732
    },
    {
        "comment": "[UPSTREAM] Revert \"[clang][Parse] Add parsing support for C++ attributes on using-declarations\"",
        "rel_patch_path": "cherry/f63adf5b67f7a25b15f81d3a1a207aba4f226dc4.patch",
        "start_version": 428724,
        "end_version": 428737
    },
    {
        "comment": "[UPSTREAM] Revert \"[libc++] NFC: Move unwrap_iter to its own header\"",
        "rel_patch_path": "cherry/b13edf6e907b32d0b8da09dfe08fa271638eca3c.patch",
        "start_version": 428724,
        "end_version": 428763
    },
    {
        "comment": "[UPSTREAM] Revert \"[NFC] Use ArgListEntry indirect types more in ISel lowering\"",
        "rel_patch_path": "cherry/3a6f12f9156bcebf38965d96007bd942024c75be.patch",
        "start_version": 428724,
        "end_version": 428781
    },
    {
        "comment": "[UPSTREAM] Revert \"[TargetLowering] Only inspect attributes in the arguments for ArgListEntry\"",
        "rel_patch_path": "cherry/71cca4f728d7421e40ec9aec0816313391fe9b59.patch",
        "start_version": 428724,
        "end_version": 428782
    },
    {
        "comment": "[UPSTREAM] [InstCombine] fix miscompile from vector select substitution",
        "rel_patch_path": "cherry/7bb8bfa0622b8ee55c3f748004dcf4d83d48cf97.patch",
        "start_version": 428724,
        "end_version": 428786
    },
    {
        "comment": "[UPSTREAM] Revert \"[clang-tidy] Simplify static assert check\"",
        "rel_patch_path": "cherry/be6b9e8ae71768d2e09ec14619ca4ecfdef553fa.patch",
        "start_version": 428724,
        "end_version": 428788
    },
    {
        "comment": "[UPSTREAM] [SLP]Better detection of perfect/shuffles matches for gather nodes.",
        "rel_patch_path": "cherry/36911971a58d1ba8b15e97790ac816eaadb0603e.patch",
        "start_version": 428724,
        "end_version": 428883
    },
    {
        "comment": "[UPSTREAM] [LTO] Fix -fwhole-program-vtables handling after HIP ThinLTO patch",
        "rel_patch_path": "cherry/d0ee8b64ecf359737ce550d8f47f465ab6657be7.patch",
        "start_version": 428724,
        "end_version": 429138
    },
    {
        "comment": "[UPSTREAM] Revert \"[LoopUnrollAndJam] Change LoopUnrollAndJamPass to LoopNest pass\"",
        "rel_patch_path": "cherry/0a9d0799316c7a601a0b20a123bd99922ac6455b.patch",
        "start_version": 428724,
        "end_version": 429323
    },
    {
        "comment": "[UPSTREAM] Revert \"3rd Reapply \"[DebugInfo] Use variadic debug values to salvage BinOps and GEP instrs with non-const operands\"\"",
        "rel_patch_path": "cherry/386b66b2fc297cda121a3cc8a36887a6ecbcfc68.patch",
        "start_version": 428724,
        "end_version": 429480
    },
    {
        "comment": "[UPSTREAM] [X86] Check destination element type before forming VTRUNCS/VTRUNCUS in combineTruncateWithSat.",
        "rel_patch_path": "cherry/765ef4bb2af604ea2bbd6c1bffaa6e1600804c9e.patch",
        "start_version": 428724,
        "end_version": 429620
    },
    {
        "comment": "[UPSTREAM] [compiler-rt] [builtins] [AArch64] Add missing AArch64 data synchronization barrier (dsb) to __clear_cache",
        "rel_patch_path": "cherry/6455418d3d2a2de1a8251cc2ccf2e87b9ae3112d.patch",
        "start_version": 416183,
        "end_version": 429795
    },
    {
        "comment": "[UPSTREAM] Revert \"[lldb] Add support for evaluating expressions in static member functions\"",
        "rel_patch_path": "cherry/4125b46232caf6a558470670f87b56ccb46d61aa.patch",
        "start_version": 428724,
        "end_version": 429832
    },
    {
        "comment": "[UPSTREAM] [ELF] Add OVERWRITE_SECTIONS command",
        "rel_patch_path": "cherry/899fdf548eee427fe08e462955e6f817ca949730.patch",
        "start_version": 428724,
        "end_version": 429964
    },
    {
        "comment": "[UPSTREAM] [libcxx][atomic] Fix failure mapping in compare_exchange_{strong,weak}.",
        "rel_patch_path": "cherry/6d33362dafb66b3af4717990d9a06450ec13f367.patch",
        "start_version": 428724,
        "end_version": 430140
    },
    {
        "comment": "[UPSTREAM] [compiler-rt][hwasan]: undefine new/delete operators with alignment on Android.",
        "rel_patch_path": "cherry/ac35ed5d34876e3b72442e61543233bd3ac6e632.patch",
        "start_version": 428724,
        "end_version": 430359
    },
    {
        "comment": "[UPSTREAM] [ELF] Optimize ScriptLexer::getLineNumber by caching the previous line number and offset",
        "rel_patch_path": "cherry/e387778722f93705db903aa755529568a05dd9db.patch",
        "start_version": 428724,
        "end_version": 430762
    },
    {
        "comment": "[UPSTREAM] [hwasan] Respect llvm.asan.globals.",
        "rel_patch_path": "cherry/78f7e6d8d7956cb96d0fa0fd606192ca0218eee1.patch",
        "start_version": 428724,
        "end_version": 430896
    },
    {
        "comment": "[UPSTREAM] [ELF] --fortran-common: prefer STB_WEAK to COMMON",
        "rel_patch_path": "cherry/7de2173c2a4c45711831cfee3ccf53690c76ff07.patch",
        "start_version": 428724,
        "end_version": 432575
    },
    {
        "comment": "[UPSTREAM] [NewPM] Add CrossDSOCFI pass irrespective of LTO optimization level",
        "rel_patch_path": "cherry/c45e17f11f508d1aea97eded3f1bda2a448f2032.patch",
        "start_version": 428724,
        "end_version": 433637
    },
    {
        "comment": "[UPSTREAM] [MBP] findBestLoopTopHelper should exit if OldTop is not a chain header",
        "rel_patch_path": "cherry/50b62731452cb83979bbf3c06e828d26a4698dca.patch",
        "start_version": 428724,
        "end_version": 434174
    },
    {
        "comment": "[UPSTREAM] [hwasan] Add __hwasan_init constructor to runtime lib.",
        "rel_patch_path": "cherry/0ebb75608759cc1ee1016699e15d03e8e3f30d14.patch",
        "start_version": 428724,
        "end_version": 434763
    },
    {
        "comment": "[UPSTREAM] [llvm-objcopy] [COFF] Do not patch debug entries if PointerToRawData is zero",
        "rel_patch_path": "cherry/16ebb7ab5c462518388527b6ebee2f0e1080b777.patch",
        "start_version": 428724,
        "end_version": 434976
    },
    {
        "comment": "[UPSTREAM] [openmp] Do not use shared memory on Android",
        "rel_patch_path": "cherry/49fabd9d76b470e3d3fdd47011826207a4e4a8eb.patch",
        "start_version": 428724,
        "end_version": 435105
    },
    {
        "comment": "[UPSTREAM] Remove unused imports.",
        "rel_patch_path": "cherry/d42be2d63ccf0cb38d218ee67746d6e108685a71.patch",
        "start_version": 428724,
        "end_version": 435733
    },
    {
        "comment": "Revert two changes that break Android builds.",
        "rel_patch_path": "Revert-two-changes-that-break-Android-builds.v5.patch",
        "start_version": 416183,
        "end_version": 428724
    },
    {
        "comment": "Revert two changes that break Android builds.",
        "rel_patch_path": "Revert-two-changes-that-break-Android-builds.v6.patch",
        "start_version": 428724,
        "end_version": null
    },
    {
        "comment": "Add stubs and headers for nl_types APIs.",
        "rel_patch_path": "Add-stubs-and-headers-for-nl_types-APIs.patch",
        "start_version": 370808,
        "end_version": null
    },
    {
        "comment": "Add a new library, libclang-cxx",
        "rel_patch_path": "Add-a-new-library-libclang-cxx.patch",
        "start_version": 370808,
        "end_version": 428724
    },
    {
        "comment": "Add a new library, libclang-cxx",
        "rel_patch_path": "Add-a-new-library-libclang-cxx.v2.patch",
        "start_version": 428724,
        "end_version": null
    },
    {
        "comment": "Revert \"[Sema] Introduce BuiltinAttr, per-declaration builtin-ness\"",
        "rel_patch_path": "Revert-Sema-Introduce-BuiltinAttr-per-declaration-bu.v2.patch",
        "start_version": 416183,
        "end_version": 428724
    },
    {
        "comment": "Revert \"[Sema] Introduce BuiltinAttr, per-declaration builtin-ness\"",
        "rel_patch_path": "Revert-Sema-Introduce-BuiltinAttr-per-declaration-bu.v3.patch",
        "start_version": 428724,
        "end_version": null
    },
    {
        "comment": "Mark XFAIL tests",
        "rel_patch_path": "Mark-XFAIL-tests.patch",
        "start_version": 428724,
        "end_version": null
    },
    {
        "comment": "Ensure that we use our toolchain's lipo, and not the system version",
        "rel_patch_path": "Ensure-that-we-use-our-toolchain-s-lipo-and-not-the-.patch",
        "start_version": 407598,
        "end_version": null
    },
    {
        "comment": "Undef FS macro for Android x86_64",
        "rel_patch_path": "Undef-FS-macro-for-Android-x86_64.patch",
        "start_version": 412851,
        "end_version": null
    },
    {
        "comment": "Revert babd3aefc91 and 6 changes after it",
        "rel_patch_path": "Revert-babd3aefc91-and-6-changes-after-it.patch",
        "start_version": 416183,
        "end_version": 416772
    }
]
