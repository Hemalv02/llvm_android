[
    {
        "comment": "[UPSTREAM] Revert \"[compiler-rt] [test] Allow expanding lit substitutions recursively\"",
        "rel_patch_path": "cherry/eafeb8af34946306a7382fa3801cf6e39a1c7226.patch",
        "start_version": 399163,
        "end_version": 399186
    },
    {
        "comment": "[UPSTREAM] Revert \"Revert \"[compiler-rt] [test] Use the parent process env as base env in tests\"\"",
        "rel_patch_path": "cherry/faa7e306e41ba250b1bf74511a6b0b15a944fb93.patch",
        "start_version": 399163,
        "end_version": 399188
    },
    {
        "comment": "[UPSTREAM] Revert \"[SCEV][IndVarSimplify] insert point should not be block front.\"",
        "rel_patch_path": "cherry/1cd1c1d62edc6693a3854b22d53c9bbc1b149798.patch",
        "start_version": 399163,
        "end_version": 399218
    },
    {
        "comment": "[UPSTREAM] Revert \"[compiler-rt][Android] Stop using detect_target_arch\"",
        "rel_patch_path": "cherry/bef00b244c3140558c574cc106771b0f2452ef84.patch",
        "start_version": 399163,
        "end_version": 399285
    },
    {
        "comment": "[UPSTREAM] Remove TwoAddressInstructionPass::sink3AddrInstruction.",
        "rel_patch_path": "cherry/60433c63acb71935111304d71e41b7ee982398f8.patch",
        "start_version": 399163,
        "end_version": 399458
    },
    {
        "comment": "[UPSTREAM] Temporarily Revert \"[AssumeBundles] Use operand bundles to encode alignment assumptions\" due to the performance bugs filed in https://bugs.llvm.org/show_bug.cgi?id=46753.",
        "rel_patch_path": "cherry/7bfaa40086359ed7e41c862ab0a65e0bb1be0aeb.patch",
        "start_version": 399163,
        "end_version": 399514
    },
    {
        "comment": "[UPSTREAM] [llvm] Add contains(KeyType) -> bool methods to SmallPtrSet",
        "rel_patch_path": "cherry/a0385bd7acd6e1d16224b4257f4cb50e59f1d75e.patch",
        "start_version": 399163,
        "end_version": 399638
    },
    {
        "comment": "[UPSTREAM] Revert \"[AddressSanitizer] Don't use weak linkage for __{start,stop}_asan_globals\"",
        "rel_patch_path": "cherry/cf5df40c4cf1a53a02ab1d56a488642e3dda8f6d.patch",
        "start_version": 399163,
        "end_version": 399661
    },
    {
        "comment": "[libc++] Build the dylib with -faligned-allocation",
        "rel_patch_path": "cherry/918ba933673a515240db867ce9467879ceb4da9f.patch",
        "start_version": 400107,
        "end_version": 400234
    },
    {
        "comment": "[UPSTREAM] Revert \"Switch to using -debug-info-kind=constructor as default (from =limited)\"",
        "rel_patch_path": "cherry/394db2259575ef3cac8d3d37836b11eb2373c435.patch",
        "start_version": 399163,
        "end_version": 400648
    },
    {
        "comment": "[UPSTREAM] [libunwind] Provide a way to set '_LIBUNWIND_IS_BAREMETAL' through cmake.",
        "rel_patch_path": "cherry/380fee34d2794361f9e222fe3c8c065be3b9fff8.patch",
        "start_version": 399163,
        "end_version": 400742
    },
    {
        "comment": "[UPSTREAM] [MC] Set sh_link to 0 if the associated symbol is undefined",
        "rel_patch_path": "cherry/11bb7c220ccdff1ffec4780ff92fb5acec8f6f0b.patch",
        "start_version": 399163,
        "end_version": 401257
    },
    {
        "comment": "[UPSTREAM] GlobalISel: Add utilty for getting function argument live ins",
        "rel_patch_path": "cherry/f8fb7835d6a5e2a75d412e1482fc1c039efef1f0.patch",
        "start_version": 399163,
        "end_version": 401402
    },
    {
        "comment": "[UPSTREAM] [ELF] Allow SHF_LINK_ORDER sections to have sh_link=0",
        "rel_patch_path": "cherry/b216c80cc2496b87bf827260ce7e24dc62247d71.patch",
        "start_version": 399163,
        "end_version": 401581
    },
    {
        "comment": "[UPSTREAM] [ELF][test] Add REQUIES: x86 and -triple=x86_64 to linkorder-mixed.s",
        "rel_patch_path": "cherry/eb45b978b7d646a7fb96a2734e44d03b2a066dfa.patch",
        "start_version": 399163,
        "end_version": 401583
    },
    {
        "comment": "[UPSTREAM] [GlobalISel][InlineAsm] Fix matching input constraint to physreg",
        "rel_patch_path": "cherry/d893278bba01b0e1209e8b8accbdd5cfa75a0932.patch",
        "start_version": 399163,
        "end_version": 401652
    },
    {
        "comment": "[UPSTREAM] [ELF] Change tombstone values to (.debug_ranges/.debug_loc) 1 and (other .debug_*) 0",
        "rel_patch_path": "cherry/004be4037e1e9c6092323c5c9268acb3ecf9176c.patch",
        "start_version": 399163,
        "end_version": 401729
    },
    {
        "comment": "PR47138: Don't crash if the preferred alignment of an invalid record",
        "rel_patch_path": "cherry/269bc3f5df6c3b75de515a48063c6941ef8fbbe6.patch",
        "start_version": 400541,
        "end_version": 402304
    },
    {
        "comment": "[UPSTREAM] hwasan: Emit the globals note even when globals are uninstrumented.",
        "rel_patch_path": "cherry/c201f27225857a6d0ba85df6ef7d5cbcc2c04e44.patch",
        "start_version": 399163,
        "end_version": 402466
    },
    {
        "comment": "[UPSTREAM] Default to disabling the libunwind frameheader cache.",
        "rel_patch_path": "cherry/a20f5fe70810e0a768c1814d69d10862965c21e4.patch",
        "start_version": 399163,
        "end_version": 402855
    },
    {
        "comment": "[UPSTREAM] [libunwind] Fix warning when building without frameheader cache",
        "rel_patch_path": "cherry/1c39ffecd84a5eba54f5fabb433b0192d1dbd3b4.patch",
        "start_version": 399163,
        "end_version": 403383
    },
    {
        "comment": "[UPSTREAM] [ARM] Skip combining base updates for vld1x NEON intrinsics",
        "rel_patch_path": "cherry/5f1cad4d296a20025f0b3ea30d82b278ddb8779b.patch",
        "start_version": 399163,
        "end_version": 403816
    },
    {
        "comment": "[UPSTREAM] [AArch64] Add -mmark-bti-property flag.",
        "rel_patch_path": "cherry/f70baaf71f62ba8623b3522345527271add74f6b.patch",
        "start_version": 399163,
        "end_version": 405405
    },
    {
        "comment": "[UPSTREAM] PR47468: Fix findPHICopyInsertPoint, so that copies aren't incorrectly inserted after an INLINEASM_BR.",
        "rel_patch_path": "cherry/f7a53d82c0902147909f28a9295a9d00b4b27d38.patch",
        "start_version": 399163,
        "end_version": 405613
    },
    {
        "comment": "[UPSTREAM] [AArch64][GlobalISel] Implement __builtin_return_address for PAC-RET ",
        "rel_patch_path": "cherry/bd44558001e978d93fbff5a4537f38b46b0e355a.patch",
        "start_version": 399163,
        "end_version": 406195
    },
    {
        "comment": "[UPSTREAM] [AArch64] __builtin_return_address for PAuth.",
        "rel_patch_path": "cherry/2a96f47c5ffca84cd774ad402cacd137f4bf45e2.patch",
        "start_version": 399163,
        "end_version": 406227
    },
    {
        "comment": "[UPSTREAM] [AArch64] PAC/BTI code generation for LLVM generated functions",
        "rel_patch_path": "cherry/a88c722e687e6780dcd6a58718350dc76fcc4cc9.patch",
        "start_version": 399163,
        "end_version": 406276
    },
    {
        "comment": "[UPSTREAM] [AArch64] Generate .note.gnu.property based on module flags.",
        "rel_patch_path": "cherry/a48f6079f288619fcc7656e89e8aa7cd0aac1281.patch",
        "start_version": 399163,
        "end_version": 406438
    },
    {
        "comment": "[UPSTREAM] [AArch64] Add BTI to CFI jumptables.",
        "rel_patch_path": "cherry/c5a4900e1a00e88df9d6d9bc39594ff8afd0d9b5.patch",
        "start_version": 399163,
        "end_version": 406546
    },
    {
        "comment": "[UPSTREAM] Revert \"Canonicalize declaration pointers when forming APValues.\"",
        "rel_patch_path": "cherry/9a33f027ac7d73e14ae287e78ab554142d1cbc8f.patch",
        "start_version": 407598,
        "end_version": 407701
    },
    {
        "comment": "[UPSTREAM] [MinGW][clang-shlib] Build only when LLVM_LINK_LLVM_DYLIB is enabled",
        "rel_patch_path": "cherry/3b1d018c0dba45408164f5e69cb400976efa350f.patch",
        "start_version": 404259,
        "end_version": 407710
    },
    {
        "comment": "[UPSTREAM] Revert \"    Enable LSAN for Android\"",
        "rel_patch_path": "cherry/25a8881b724abf7251a9278e72224af7e82cb9c2.patch",
        "start_version": 407598,
        "end_version": 407756
    },
    {
        "comment": "[UPSTREAM] Revert \"DirectoryWatcher: add an implementation for Windows\"",
        "rel_patch_path": "cherry/0ec1cf13f2a4e31aa2c5ccc665c5fbdcd3a94577.patch",
        "start_version": 407598,
        "end_version": 407821
    },
    {
        "comment": "[cmake] Unconditionally set the force flag when codesigning",
        "rel_patch_path": "cherry/24c1660ac5d7813072b429eee7a9531338e53aea.patch",
        "start_version": 399163,
        "end_version": 407847
    },
    {
        "comment": "[UPSTREAM] Revert \"[clang-format] Fix AlignConsecutive on PP blocks\"",
        "rel_patch_path": "cherry/b9e789447f14c0330edd22c82746af29e7c3b259.patch",
        "start_version": 407598,
        "end_version": 408204
    },
    {
        "comment": "[UPSTREAM] Revert \"[ARM][LowOverheadLoops] Adjust Start insertion.\"",
        "rel_patch_path": "cherry/6dcbc323fd8778ba6db1c4e76c809f93fc82efc5.patch",
        "start_version": 407598,
        "end_version": 408442
    },
    {
        "comment": "Driver: Add integer sanitizers to trapping group automatically.",
        "rel_patch_path": "cherry/c5acd3490b79703426931f7b88b544fe7c6e1ef2.patch",
        "start_version": 403758,
        "end_version": 408516
    },
    {
        "comment": "[UPSTREAM] Revert \"[CodeExtractor] Don't create bitcasts when inserting lifetime markers (NFCI)\"",
        "rel_patch_path": "cherry/099bffe7f7df41d66195ce33e91888a4a16c6b4a.patch",
        "start_version": 407598,
        "end_version": 408753
    },
    {
        "comment": "[MC] Adjust StringTableBuilder for linked Mach-O binaries",
        "rel_patch_path": "cherry/27e11d7120c0caa20a167b44ba29828446a525c0.patch",
        "start_version": 399163,
        "end_version": 408786
    },
    {
        "comment": "[UPSTREAM] Revert \"[Statepoints] Allow deopt GC pointer on VReg if gc-live bundle is empty.\"",
        "rel_patch_path": "cherry/4f7ee55971e7f7a27af69c501e4b395c4079decb.patch",
        "start_version": 407598,
        "end_version": 408846
    },
    {
        "comment": "[UPSTREAM] hwasan: Disable operator {new,delete} interceptors when interceptors are disabled.",
        "rel_patch_path": "cherry/fa66bcf4bc9467514dddacdba711a42e0a83cf9d.patch",
        "start_version": 407598,
        "end_version": 408929
    },
    {
        "comment": "[LegalizeTypes] Legalize vector rotate operations",
        "rel_patch_path": "cherry/62b17a76971cd17c1ebd4ce00a536b0b74af98b2.patch",
        "start_version": 404259,
        "end_version": 408939
    },
    {
        "comment": "[UPSTREAM] [ELF] --emit-relocs: fix st_value of STT_SECTION in the presence of a gap before the first input section",
        "rel_patch_path": "cherry/2fc704a0a529dd7eba7566a293f981a86bfa5c3e.patch",
        "start_version": 407598,
        "end_version": 409811
    },
    {
        "comment": "[UPSTREAM] Revert \"[CodeGen] [WinException] Only produce handler data at the end of the function if needed\"",
        "rel_patch_path": "cherry/cbf25fbed5b46ec47e3ce2799ed9095f2f18ea8f.patch",
        "start_version": 407598,
        "end_version": 409948
    },
    {
        "comment": "[ARM] Fix PR 47980: Use constrainRegClass during foldImmediate opt.",
        "rel_patch_path": "cherry/8262e94a6da77e176dbd13d9eadce76da74489d4.patch",
        "start_version": 404259,
        "end_version": 410707
    },
    {
        "comment": "[UPSTREAM] hwasan: Bring back operator {new,delete} interceptors on Android.",
        "rel_patch_path": "cherry/0ae2ea8f83e3b79c587f0461b5cac98de1be220d.patch",
        "start_version": 407598,
        "end_version": 410722
    },
    {
        "comment": "[llvm-objcopy] --only-keep-debug: place zero-size segment according to its parent segment",
        "rel_patch_path": "cherry/20de1822466e87c137b2369d8601b0f4c575981b.patch",
        "start_version": 399163,
        "end_version": 410815
    },
    {
        "comment": "[UPSTREAM] Hwasan reporting check for dladdr failing",
        "rel_patch_path": "cherry/83ac18205ec69a00ac2be3b603bc3a61293fbe89.patch",
        "start_version": 407598,
        "end_version": 411205
    },
    {
        "comment": "[UPSTREAM] [hwasan] Fix Thread reuse (try 2).",
        "rel_patch_path": "cherry/523cc097fdafa1bb60373dcc70df7dfd31551f56.patch",
        "start_version": 407598,
        "end_version": 411532
    },
    {
        "comment": "[UPSTREAM] [hwasan] Implement error report callback.",
        "rel_patch_path": "cherry/08d90f72cebd72dd0a972565ffcc445e57f50d8a.patch",
        "start_version": 407598,
        "end_version": 411738
    },
    {
        "comment": "[OpenMP] fix asm code for for arm64 (AARCH64) for Darwin/macOS",
        "rel_patch_path": "cherry/7b5254223acbf2ef9cd278070c5a84ab278d7e5f.patch",
        "start_version": 399163,
        "end_version": 411939
    },
    {
        "comment": "[UPSTREAM] Revert \"[DebugInfo] Improve dbg preservation in LSR.\"",
        "rel_patch_path": "cherry/808fcfe5944755f08ae88722070302fcf9135e58.patch",
        "start_version": 407598,
        "end_version": 412204
    },
    {
        "comment": "[UPSTREAM] Revert \"[ASTMatchers] Matcher macros with params move params instead of copying\"",
        "rel_patch_path": "cherry/0ce32a79825f307d2f46b8a5823489a67d6d072f.patch",
        "start_version": 407598,
        "end_version": 412228
    },
    {
        "comment": "Revert two changes that break Android builds.",
        "rel_patch_path": "Revert-two-changes-that-break-Android-builds.v3.patch",
        "start_version": 394052,
        "end_version": null
    },
    {
        "comment": "Add stubs and headers for nl_types APIs.",
        "rel_patch_path": "Add-stubs-and-headers-for-nl_types-APIs.patch",
        "start_version": 370808,
        "end_version": null
    },
    {
        "comment": "Add a new library, libclang-cxx",
        "rel_patch_path": "Add-a-new-library-libclang-cxx.patch",
        "start_version": 370808,
        "end_version": null
    },
    {
        "comment": "ANDROID Do not record function addresses if value profiling is disabled",
        "rel_patch_path": "ANDROID-Do-not-record-function-addresses-if-value-profiling-is-disabled.patch",
        "start_version": 377782,
        "end_version": null
    },
    {
        "comment": "Revert \"[X86] Custom lower ISD::FROUND with SSE4.1 to avoid a libcall.\"",
        "rel_patch_path": "Revert-X86-Custom-lower-ISD-FROUND-with-SSE4.1-to-av-v2.patch",
        "start_version": 390410,
        "end_version": 404259
    },
    {
        "comment": "Revert \"[X86] Custom lower ISD::FROUND with SSE4.1 to avoid a libcall.\"",
        "rel_patch_path": "Revert-X86-Custom-lower-ISD-FROUND-with-SSE4.1-to-av-v3.patch",
        "start_version": 404259,
        "end_version": null
    },
    {
        "comment": "Revert \"[libc++] Remove workarounds for the lack of clock_gettime on older macOS platforms\"",
        "rel_patch_path": "Revert-Remove-workarounds-for-the-lack-of-clock_gettime-on-older-macOS-platforms.patch",
        "start_version": 395739,
        "end_version": 407598
    },
    {
        "comment": "Revert \"[libc++] Remove workarounds for the lack of clock_gettime on older macOS platforms\"",
        "rel_patch_path": "Revert-Remove-workarounds-for-the-lack-of-clock_gettime-on-older-macOS-platforms-v2.patch",
        "start_version": 407598,
        "end_version": null
    },
    {
        "comment": "Revert \"[llvm-objcopy] [COFF] Fix a misconception about debug directory payloads\"",
        "rel_patch_path": "Revert-windows-debug-directory.patch",
        "start_version": 399163,
        "end_version": null
    }
]