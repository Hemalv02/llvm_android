[
    {
        "comment": "[UPSTREAM] Revert \"[ARM] Improve codegen of volatile load/store of i64\"",
        "rel_patch_path": "cherry/af2a38458197e07cbd03ea9446714008488826d8.patch",
        "start_version": 383902,
        "end_version": 383972
    },
    {
        "comment": "[UPSTREAM] [SimplifyLibCalls] Add __strlen_chk.",
        "rel_patch_path": "cherry/f8c9ceb1ce9c71574d413a6391812d46d9f9edb3.patch",
        "start_version": 377782,
        "end_version": 383990
    },
    {
        "comment": "[UPSTREAM] Revert \"[InstCombine][DebugInfo] Fold constants wrapped in metadata\"",
        "rel_patch_path": "cherry/982944525c7706c4dee00042d5b7cf2f0d87804f.patch",
        "start_version": 383902,
        "end_version": 384124
    },
    {
        "comment": "[UPSTREAM] Fix type-dependency of bitfields in templates",
        "rel_patch_path": "cherry/a58017e5cae5be948fd1913b68d46553e87aa622.patch",
        "start_version": 383902,
        "end_version": 384466
    },
    {
        "comment": "[UPSTREAM] [ARM] Fix infinite loop when lowering STRICT_FP_EXTEND",
        "rel_patch_path": "cherry/0ec57972967dfb43fc022c2e3788be041d1db730.patch",
        "start_version": 383902,
        "end_version": 384546
    },
    {
        "comment": "[UPSTREAM] [JumpThreading] Skip unconditional PredBB when threading jumps through two basic blocks",
        "rel_patch_path": "cherry/13a97305ba77f44eccba16087320c8aa016ac6da.patch",
        "start_version": 383902,
        "end_version": 385016
    },
    {
        "comment": "[UPSTREAM] Allow customized relative PYTHONHOME",
        "rel_patch_path": "cherry/3ec3f62f0a0b1ac13230922c91ffc988c1b1e8d5v2.patch",
        "start_version": 383902,
        "end_version": 385429
    },
    {
        "comment": "[UPSTREAM] Revert \"[LICM] Support hosting of dynamic allocas out of loops\"",
        "rel_patch_path": "cherry/14845b2c459021e3dbf2ead52d707d4a7db40cbb.patch",
        "start_version": 383902,
        "end_version": 385655
    },
    {
        "comment": "[UPSTREAM] [MC][ARM] Resolve some pcrel fixups at assembly time (PR44929)",
        "rel_patch_path": "cherry/2e24219d3cbfcb8c824c58872f97de0a2e94a7c8.patch",
        "start_version": 383902,
        "end_version": 385846
    },
    {
        "comment": "[UPSTREAM] [DAGCombine] Fix alias analysis for unaligned accesses",
        "rel_patch_path": "cherry/1de10705594c7a2c9b8fde901c391bd84062ae04.patch",
        "start_version": 377782,
        "end_version": 385989
    },
    {
        "comment": "[UPSTREAM] Revert \"[clang] detect switch fallthrough marked by a comment (PR43465)\"",
        "rel_patch_path": "cherry/c61401b89742f230b7e6a2cc0548fbf7442e906d.patch",
        "start_version": 383902,
        "end_version": 386178
    },
    {
        "comment": "[UPSTREAM] [cmake] By default do not build compiler-rt with PGO",
        "rel_patch_path": "cherry/20dfcf189d224e637377970318a021c81d2fbde0.patch",
        "start_version": 383902,
        "end_version": 386784
    },
    {
        "comment": "[UPSTREAM] [cmake] Strip quotes in compiler-rt/lib/crt; error if checks fail",
        "rel_patch_path": "cherry/cfc3e7f458f8798782c01a0dadf872c60340c23e.patch",
        "start_version": 383902,
        "end_version": 386785
    },
    {
        "comment": "[UPSTREAM] [CUDA] Warn about unsupported CUDA SDK version only if it's used.",
        "rel_patch_path": "cherry/eb2ba2ea953b5ea73cdbb598f77470bde1c6a011.patch",
        "start_version": 383902,
        "end_version": 387062
    },
    {
        "comment": "[UPSTREAM] [DAGCombiner] Do not fold truncate(build_vector(..)) if it creates an illegal type",
        "rel_patch_path": "cherry/edcfb47ff6d5562e22207f364c65f84302aa346b.patch",
        "start_version": 357161,
        "end_version": 387801
    },
    {
        "comment": "[UPSTREAM] [llvm-ar] Use target triple to deduce archive kind for bitcode inputs",
        "rel_patch_path": "cherry/fe5599eac6a57ad5a354e3b6fec9e97332304bac.patch",
        "start_version": 377782,
        "end_version": 387824
    },
    {
        "comment": "[UPSTREAM] [ELF] Fix a null pointer dereference when --emit-relocs and --strip-debug are used together",
        "rel_patch_path": "cherry/6c73246179376442705b3a545f4e1f1478777a04.patch",
        "start_version": 377782,
        "end_version": 384549
    },
    {
        "comment": "[UPSTREAM] [ASTMatchers] Adds a matcher called `hasAnyOperatorName`",
        "rel_patch_path": "cherry/6a0c066c6102cd463e8ad48881e91e596547507a.patch",
        "start_version": 383902,
        "end_version": 385583
    },
    {
        "comment": "[UPSTREAM] [ASTMatchers] Add hasAnyOverloadedOperatorName matcher",
        "rel_patch_path": "cherry/77eec38626cb9e796f6cbb108ea9be5ee6e0ce81.patch",
        "start_version": 383902,
        "end_version": 386793
    },
    {
        "comment": "[UPSTREAM] Revert \"[GISel]: Fix incorrect IRTranslation while translating null pointer types\"",
        "rel_patch_path": "cherry/b8fc192d42af56b17b7d940e6c226f4969e0d851.patch",
        "start_version": 383902,
        "end_version": 388672
    },
    {
        "comment": "[UPSTREAM] [clang-tidy]: fix false positive of cert-oop54-cpp check",
        "rel_patch_path": "cherry/0f9e1e3ae750df483b7fff905a8bc89262e3179e.patch",
        "start_version": 383902,
        "end_version": 389251
    },
    {
        "comment": "[CodeGen] only add nobuiltin to inline builtins if we'll emit them",
        "rel_patch_path": "cherry/2dd17ff08165e6118e70f00e22b2c36d2d4e0a9a.patch",
        "start_version": 383902,
        "end_version": 390396
    },
    {
        "comment": "[CodeGen] fix inline builtin-related breakage from D78162",
        "rel_patch_path": "cherry/94908088a831141cfbdd15fc5837dccf30cfeeb6.patch",
        "start_version": 383902,
        "end_version": 390556
    },
    {
        "comment": "[ubsan] Link shared runtime library with a version script.",
        "rel_patch_path": "cherry/77e3a2e0fe02e8bdeb8276c08c95290d9e78feba.patch",
        "start_version": 383902,
        "end_version": 390596
    },
    {
        "comment": "[CMake] Set UBSAN_LINK_FLAGS for ubsan",
        "rel_patch_path": "cherry/6919b708a180b8791d8d21b289958f1f061c71e3.patch",
        "start_version": 383902,
        "end_version": 390723
    },
    {
        "comment": "[llvm-objcopy] Enable --discard-all for MachO",
        "rel_patch_path": "cherry/f79b81fbe2870ff631ad72a75f7e077b15b52a22.patch",
        "start_version": 383902,
        "end_version": 385798
    },
    {
        "comment": "Reland D76675 [llvm-objcopy] Match GNU behaviour regarding file symbols",
        "rel_patch_path": "cherry/b14e9e3c0cab6fb4c53e5814b6a2454d4688a49e.patch",
        "start_version": 383902,
        "end_version": 390947
    },
    {
        "comment": "Revert two changes that break Android builds.",
        "rel_patch_path": "Revert-two-changes-that-break-Android-builds.v2.patch",
        "start_version": 377782,
        "end_version": null
    },
    {
        "comment": "Add stubs and headers for nl_types APIs.",
        "rel_patch_path": "Add-stubs-and-headers-for-nl_types-APIs.patch",
        "start_version": 370808,
        "end_version": null
    },
    {
        "comment": "Add a new library, libclang-cxx",
        "rel_patch_path": "Add-a-new-library-libclang-cxx.patch",
        "start_version": 370808,
        "end_version": null
    },
    {
        "comment": "ANDROID Do not record function addresses if value profiling is disabled",
        "rel_patch_path": "ANDROID-Do-not-record-function-addresses-if-value-profiling-is-disabled.patch",
        "start_version": 377782,
        "end_version": null
    },
    {
        "comment": "Revert two libz changes that break lldb",
        "rel_patch_path": "Revert-two-zlib-changes.patch",
        "start_version": 380415,
        "end_version": 386220
    },
    {
        "comment": "Revert \"[X86] Custom lower ISD::FROUND with SSE4.1 to avoid a libcall.\"",
        "rel_patch_path": "Revert-X86-Custom-lower-ISD-FROUND-with-SSE4.1-to-av.patch",
        "start_version": 383902,
        "end_version": null
    }
]