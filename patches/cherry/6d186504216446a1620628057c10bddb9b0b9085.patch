From 2555ffefb17aff929c0d3a4d754edead22be5779 Mon Sep 17 00:00:00 2001
From: David Goldman <dallasftball@gmail.com>
Date: Fri, 13 Sep 2019 14:43:24 +0000
Subject: UPSTREAM: [Sema][Typo Correction] Fix potential infite loop on
 ambiguity checks

Summary:
This fixes a bug introduced in D62648, where Clang could infinite loop
if it became stuck on a single TypoCorrection when it was supposed to
be testing ambiguous corrections. Although not a common case, it could
happen if there are multiple possible corrections with the same edit
distance.

The fix is simply to wipe the TypoExpr from the `TransformCache` so that
the call to `TransformTypoExpr` doesn't use the `CachedEntry`.

Reviewers: rsmith

Subscribers: cfe-commits

Tags: #clang

Differential Revision: https://reviews.llvm.org/D67515

llvm-svn: 371859

Bug: 139945549
Bug: 145623332
(cherry picked from commit 6d186504216446a1620628057c10bddb9b0b9085)
Change-Id: Ib9e5f8d9cbf330916df20136029f5601cd520f60
Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
---
 clang/lib/Sema/SemaExprCXX.cpp                |  4 +++
 clang/test/Sema/typo-correction-ambiguity.cpp | 29 +++++++++++++++++++
 2 files changed, 33 insertions(+)
 create mode 100644 clang/test/Sema/typo-correction-ambiguity.cpp

diff --git a/clang/lib/Sema/SemaExprCXX.cpp b/clang/lib/Sema/SemaExprCXX.cpp
index 7ea3c8f8341..10180351925 100644
--- a/clang/lib/Sema/SemaExprCXX.cpp
+++ b/clang/lib/Sema/SemaExprCXX.cpp
@@ -7755,6 +7755,10 @@ class TransformTypos : public TreeTransform<TransformTypos> {
         TypoCorrection TC = SemaRef.getTypoExprState(TE).Consumer->peekNextCorrection();
         TypoCorrection Next;
         do {
+          // Fetch the next correction by erasing the typo from the cache and calling
+          // `TryTransform` which will iterate through corrections in
+          // `TransformTypoExpr`.
+          TransformCache.erase(TE);
           ExprResult AmbigRes = CheckForRecursiveTypos(TryTransform(E), IsAmbiguous);
 
           if (!AmbigRes.isInvalid() || IsAmbiguous) {
diff --git a/clang/test/Sema/typo-correction-ambiguity.cpp b/clang/test/Sema/typo-correction-ambiguity.cpp
new file mode 100644
index 00000000000..9dcff3d68c8
--- /dev/null
+++ b/clang/test/Sema/typo-correction-ambiguity.cpp
@@ -0,0 +1,29 @@
+// RUN: %clang_cc1 -fsyntax-only -verify %s
+
+// Check the following typo correction behavior in namespaces:
+// - no typos are diagnosed when an expression has ambiguous (multiple) corrections
+// - proper iteration through multiple potentially ambiguous corrections
+
+namespace AmbiguousCorrection
+{
+  void method_Bar();
+  void method_Foo();
+  void method_Zoo();
+};
+
+void testAmbiguousNoSuggestions()
+{
+  AmbiguousCorrection::method_Ace(); // expected-error {{no member named 'method_Ace' in namespace 'AmbiguousCorrection'}}
+}
+
+namespace MultipleCorrectionsButNotAmbiguous
+{
+  int PrefixType_Name(int value);  // expected-note {{'PrefixType_Name' declared here}}
+  int PrefixType_MIN();
+  int PrefixType_MAX();
+};
+
+int testMultipleCorrectionsButNotAmbiguous() {
+  int val = MultipleCorrectionsButNotAmbiguous::PrefixType_Enum(0);  // expected-error {{no member named 'PrefixType_Enum' in namespace 'MultipleCorrectionsButNotAmbiguous'; did you mean 'PrefixType_Name'?}}
+  return val;
+}
-- 
2.25.0.341.g760bfbb309-goog

