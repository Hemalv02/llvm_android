From 48dd8f75acfd9f339b9ef4b4c156492e578ef557 Mon Sep 17 00:00:00 2001
From: Richard Smith <richard-llvm@metafoo.co.uk>
Date: Thu, 26 Sep 2019 22:28:32 +0000
Subject: [UPSTREAM] Always rebuild a DeclRefExpr if its FoundDecl would
 change.

Fixes a regression introduced by r369999.

llvm-svn: 373022
(cherry picked from commit bf322b7cdd608630a42fd65687b74051601c357d)
Bug: 139945549
Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>

Change-Id: Iee2d7c2041721a3c05bdf1c76661826c3aa7a22c
Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
---
 clang/lib/Sema/TreeTransform.h         |  1 +
 clang/test/SemaTemplate/using-decl.cpp | 16 ++++++++++++++++
 2 files changed, 17 insertions(+)
 create mode 100644 clang/test/SemaTemplate/using-decl.cpp

diff --git a/clang/lib/Sema/TreeTransform.h b/clang/lib/Sema/TreeTransform.h
index c2a144a401f..2b875d3db53 100644
--- a/clang/lib/Sema/TreeTransform.h
+++ b/clang/lib/Sema/TreeTransform.h
@@ -9221,6 +9221,7 @@ TreeTransform<Derived>::TransformDeclRefExpr(DeclRefExpr *E) {
   if (!getDerived().AlwaysRebuild() &&
       QualifierLoc == E->getQualifierLoc() &&
       ND == E->getDecl() &&
+      Found == E->getFoundDecl() &&
       NameInfo.getName() == E->getDecl()->getDeclName() &&
       !E->hasExplicitTemplateArgs()) {
 
diff --git a/clang/test/SemaTemplate/using-decl.cpp b/clang/test/SemaTemplate/using-decl.cpp
new file mode 100644
index 00000000000..1ef2a2dfaa0
--- /dev/null
+++ b/clang/test/SemaTemplate/using-decl.cpp
@@ -0,0 +1,16 @@
+// RUN: %clang_cc1 -std=c++2a -verify %s
+// expected-no-diagnostics
+
+namespace UsingInGenericLambda {
+  namespace a {
+    enum { b };
+  }
+  template<typename> void c() {
+    auto d = [](auto) {
+      using a::b;
+      (void)b;
+    };
+    d(0);
+  }
+  void e() { c<int>(); }
+}
-- 
2.25.0.341.g760bfbb309-goog

